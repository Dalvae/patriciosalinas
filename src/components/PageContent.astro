---
import type { Page } from "../types/types";
import ProtectedImage from "./ui/ReactProtrectedImage";
import { parse, HTMLElement, Node, NodeType } from "node-html-parser";
import "../styles/wordpress-styles.css";

interface Props {
  page: Page;
  isHomePage: boolean;
}

const { page, isHomePage } = Astro.props;
const title = page.title;
const content = page.content || "";
const root = parse(content);

// Extract all image sources from the content
const allImages = root
  .querySelectorAll("img")
  .map((img) => img.getAttribute("src"))
  .filter((src): src is string => src !== null);

function processNode(
  node: Node
): Array<{ type: "html" | "image"; content: any }> {
  if (node.nodeType === NodeType.ELEMENT_NODE) {
    const element = node as HTMLElement;
    if (element.tagName === "IMG") {
      return [
        {
          type: "image",
          content: {
            src: element.getAttribute("src"),
            alt: element.getAttribute("alt") || "",
            width: element.getAttribute("width"),
            height: element.getAttribute("height"),
          },
        },
      ];
    } else {
      const childResults = element.childNodes.flatMap(processNode);
      const openTag = element.toString().split(">")[0] + ">";
      const closeTag = `</${element.tagName.toLowerCase()}>`;
      return [
        { type: "html", content: openTag },
        ...childResults,
        { type: "html", content: closeTag },
      ];
    }
  } else if (node.nodeType === NodeType.TEXT_NODE) {
    return [{ type: "html", content: node.text }];
  }
  return [];
}

const processedContent = root.childNodes.flatMap(processNode);
---

<div class="mx-auto max-w-4xl">
  <article class="wp-blocks prose max-w-none p-2">
    {!isHomePage && <h1 class="py-5 text-center text-7xl">{title}</h1>}
    {
      processedContent.map((item) => {
        if (item.type === "html") {
          return <Fragment set:html={item.content} />;
        } else if (item.type === "image") {
          return (
            <ProtectedImage
              client:load
              src={item.content.src || ""}
              alt={item.content.alt}
              width={item.content.width}
              height={item.content.height}
              allImages={allImages}
            />
          );
        }
      })
    }
  </article>
</div>
