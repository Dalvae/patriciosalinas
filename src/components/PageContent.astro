---
import type { Page } from "../types/types";
import ProtectedImage from "./ui/ProtectedImage.astro";
import { parse, HTMLElement, Node } from "node-html-parser";

interface Props {
  page: Page;
  isHomePage: boolean;
}

const { page, isHomePage } = Astro.props;
const title = page.title;
const content = page.content || "";

const root = parse(content);

function processNode(
  node: Node
): Array<{ type: "html" | "image"; content: any }> {
  if (node.nodeType === 1) {
    // Element node
    const element = node as HTMLElement;
    if (element.tagName === "IMG") {
      return [
        {
          type: "image",
          content: {
            src: element.getAttribute("src"),
            alt: element.getAttribute("alt") || "",
            width: element.getAttribute("width"),
            height: element.getAttribute("height"),
          },
        },
      ];
    } else {
      const childResults = element.childNodes.flatMap(processNode);
      element.childNodes.forEach((child) => child.remove());
      return [{ type: "html", content: element.toString() }, ...childResults];
    }
  }
  return [{ type: "html", content: node.toString() }];
}

const processedContent = root.childNodes.flatMap(processNode);
---

<div class="mx-auto max-w-5xl">
  <article class="wp-blocks prose max-w-none">
    {!isHomePage && <h1>{title}</h1>}
    {
      processedContent.map((item) => {
        if (item.type === "html") {
          return <Fragment set:html={item.content} />;
        } else if (item.type === "image") {
          return (
            <ProtectedImage
              src={item.content.src || ""}
              alt={item.content.alt}
              width={item.content.width}
              height={item.content.height}
            />
          );
        }
      })
    }
  </article>
</div>
