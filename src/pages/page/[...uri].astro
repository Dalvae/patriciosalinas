---
import Layout from "../../layouts/Layout.astro";
import ProtectedImage from "../../components/ProtectedImage.astro";
import {
  getPageByURI,
  getPages,
  getAllPageURIs,
} from "../../lib/graphql-queries";
import {
  extractImagesFromHTML,
  replaceImagesWithPlaceholders,
} from "../../utils/htmlUtils";
import type { Page } from "../../types/types";

export async function getStaticPaths() {
  let uris: string[];
  try {
    uris = await getAllPageURIs();
  } catch (error) {
    console.error("Failed to fetch page URIs:", error);
    uris = [];
  }
  return uris.map((uri) => ({ params: { uri } }));
}

const { uri } = Astro.params;
let page: Page | null = null;
// let pages: Page[] = [];  // Comentado si no se usa
let error: Error | null = null;

try {
  [page] = await Promise.all([getPageByURI(uri || "home")]);
} catch (e) {
  console.error("Error fetching data:", e);
  error = e instanceof Error ? e : new Error("An unknown error occurred");
}

const images = page ? extractImagesFromHTML(page.content) : [];
const contentWithoutImages = page
  ? replaceImagesWithPlaceholders(page.content)
  : "";
---

<Layout title={page?.title || "Página no encontrada"}>
  {
    error ? (
      <p>
        Hubo un problema al cargar el contenido. Por favor, intenta recargar la
        página.
      </p>
    ) : page ? (
      <main>
        <article>
          <h1>{page.title}</h1>
          {images.map((img) => (
            <ProtectedImage
              src={img.src}
              alt={img.alt}
              width={img.width}
              height={img.height}
            />
          ))}
          <div set:html={contentWithoutImages} />
        </article>
      </main>
    ) : (
      <p>Página no encontrada.</p>
    )
  }
</Layout>
