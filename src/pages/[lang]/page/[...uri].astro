---
import Layout from "../../../layouts/Layout.astro";
import ProtectedImage from "../../../components/ProtectedImage.astro";
import { getPageByURI, getAllPages } from "../../../lib/graphql-queries";
import type { Page, Lang } from "../../../types/types";
import { getLangFromUrl, useTranslations } from "../../../i18n/utils";

export async function getStaticPaths() {
  const pages = await getAllPages();
  return pages.map((page) => {
    const pathParts = page.uri.split("/").filter(Boolean);
    const lang = getLangFromUrl(new URL(page.uri, "http://example.com"));
    const uri = pathParts.slice(1).join("/") || undefined;
    return {
      params: { lang, uri },
      props: { pageData: page },
    };
  });
}

const { lang, uri } = Astro.params as { lang: Lang; uri?: string };
const { pageData } = Astro.props;
const t = useTranslations(lang);

let page: Page | null = pageData;
let error: Error | null = null;

if (!page && lang && uri) {
  try {
    page = await getPageByURI(`/${lang}/${uri}`);
  } catch (e) {
    console.error("Error fetching page:", e);
    error = e instanceof Error ? e : new Error("An unknown error occurred");
  }
}

function replaceImages(content: string) {
  return content.replace(
    /<img(.*?)src="(.*?)"(.*?)>/g,
    (_, before, src, after) => {
      return `<ProtectedImage${before}src="${src}"${after} />`;
    }
  );
}

const pageContent = page && page.content ? replaceImages(page.content) : "";
---

<Layout title={page?.title || "Patricio Salinas"}>
  {
    error ? (
      <p>{t("error.loading")}</p>
    ) : page ? (
      <main>
        <h1>{page.title}</h1>
        {page.content ? (
          <div set:html={pageContent} />
        ) : (
          <p>No content available for this page.</p>
        )}
      </main>
    ) : (
      <p>{t("error.loading")}</p>
    )
  }
</Layout>
