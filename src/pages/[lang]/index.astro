---
import Layout from "../../layouts/Layout.astro";
import {
  getHomePageContent,
  getPages,
  getPosts,
} from "../../lib/graphql-queries";
import type { Post, Page, Lang } from "../../types/types";
import { getLangFromUrl, useTranslations } from "../../i18n/utils";

export function getStaticPaths() {
  return [
    { params: { lang: "en" } },
    { params: { lang: "es" } },
    { params: { lang: "sv" } },
  ];
}

const { lang } = Astro.params as { lang: Lang };
const t = useTranslations(lang);

interface HomeContent {
  title: string;
  content: string;
}

let homeContent: HomeContent | null = null;
let pages: Page[] = [];
let posts: Post[] = [];
let error: Error | null = null;

try {
  const [homeContentData, pagesData, postsData] = await Promise.all([
    getHomePageContent(lang),
    getPages(lang),
    getPosts(lang),
  ]);

  homeContent = homeContentData;
  pages = pagesData;
  posts = postsData;
} catch (e) {
  console.error("Error fetching data:", e);
  error = e instanceof Error ? e : new Error("An unknown error occurred");
}
---

<Layout title="Patricio Salinas">
  {
    error ? (
      <p>{t("error.loading")}</p>
    ) : homeContent ? (
      <main>
        <h1>{homeContent.title}</h1>
        <div set:html={homeContent.content} />
        <h2>{t("home.latestPosts")}</h2>
        <ul>
          {posts.slice(0, 5).map((post) => (
            <li>
              <a href={`/${lang}${post.uri}`}>{post.title}</a>
              <p set:html={post.excerpt} />
            </li>
          ))}
        </ul>
      </main>
    ) : (
      <p>{t("error.loading")}</p>
    )
  }
</Layout>
