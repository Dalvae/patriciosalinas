---
import Layout from "../../layouts/Layout.astro";
import { getPages } from "../../lib/graphql-queries";
import type { Page, Lang } from "../../types/types";
import { useTranslations } from "../../i18n/utils";
import PageContent from "../../components/PageContent.astro";
import HomePage from "../../components/HomePage.astro";
import GalleryPage from "../../components/GalleryPage.astro"; // Componente de la galería
import PressPage from "../../components/PressPage.astro"; // Componente de prensa
import { getProjectPageSlug } from "../../lib/project-utils";

export async function getStaticPaths() {
  const languages: Lang[] = ["en", "es", "sv"];
  const allPagesPerLang = await Promise.all(
    languages.map(async (lang) => {
      const pages = await getPages(lang);
      const projectSlug = getProjectPageSlug(lang);
      const projects = pages.filter((page) =>
        page.uri.includes(`/${projectSlug}/`)
      );
      return pages.map((page) => ({
        params: {
          lang,
          uri: page.isFrontPage
            ? undefined
            : page.uri.replace(`/${lang}/`, "").replace(/^\//, ""),
        },
        props: {
          pages,
          currentPage: page,
          isHomePage: page.isFrontPage,
          projects,
        },
      }));
    })
  );
  return allPagesPerLang.flat();
}

const { lang, uri } = Astro.params;
const { pages, currentPage, isHomePage, projects } = Astro.props;
const t = useTranslations(lang as Lang);

console.log("Rendering page:", {
  lang,
  uri,
  isHomePage,
  currentPage: currentPage?.title,
});

if (!currentPage) {
  return Astro.redirect("/404");
}

function extractImagesFromContent(content: string): string[] {
  const imgRegex = /<img.*?src="(.*?)".*?>/g;
  const images: string[] = [];
  let match;
  while ((match = imgRegex.exec(content)) !== null) {
    images.push(match[1]);
  }
  return images;
}

const projectsForHomePage = projects.map((project) => {
  const images = extractImagesFromContent(project.content || "");
  return {
    title: project.title,
    images: images,
    link: project.uri,
  };
});

// --- Verificar si la página es galería o prensa ---
const isGallery = uri === "gallery" || uri === "galeria" || uri === "galleri";
const isPress = uri === "press" || uri === "prensa" || uri === "pressbevakning";
---

<Layout title={currentPage.title} lang={lang as Lang} pages={pages}>
  {
    isHomePage ? (
      <HomePage
        content={currentPage.content || ""}
        projects={projectsForHomePage}
        lang={lang as Lang}
      />
    ) : isGallery ? (
      <GalleryPage page={currentPage || ""} />
    ) : isPress ? (
      <PressPage page={currentPage || ""} />
    ) : (
      <PageContent page={currentPage} isHomePage={isHomePage} />
    )
  }
</Layout>
